import os
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import rc
rc('mathtext', default='regular')

temperature_XIc = []
temperature_YPrism = []
temperature_ZBasal = []

molecules_XIc = []
molecules_YPrism = []
molecules_ZBasal = []

std_molecules_XIc = []
std_molecules_YPrism = []
std_molecules_ZBasal = []

flut_molecules_XIc = []
flut_molecules_YPrism = []
flut_molecules_ZBasal = []

# list of file names

filename = []

for object in os.listdir(os.getcwdb()):
    string_object = object.decode('utf-8')
    if ".dat" in string_object:
        filename.append(string_object)

print("file:", filename)
for file in filename:

    results = []

    with open(file, "r") as f:

        for line in f:
            liner = str(line)
            elements = liner.split(",")
            elements = np.array([int(i) for i in elements])
            elements = abs(elements-1)
            results.append(sum(elements))

        value, deviation = np.mean(results), np.std(results)

        if "XIc" in file:
            temperature_XIc.append(int(file[-8:-5]))
            std_molecules_XIc.append(deviation)
            molecules_XIc.append(value)
            flut_molecules_XIc.append(results)
        elif "Yprism1" in file:
            temperature_YPrism.append(int(file[-8:-5]))
            std_molecules_YPrism.append(deviation)
            molecules_YPrism.append(value)
            flut_molecules_YPrism.append(results)
        elif "cryst" in file:
            #temperature_ZBasal.append(int(file[-8:-5]))
            std_molecules_ZBasal.append(deviation)
            molecules_ZBasal.append(value)
            flut_molecules_ZBasal.append(results)
        else:
            "There is a bug!!"

print(flut_molecules_ZBasal)

x = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200])
x2 = 5*0.005*np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200])
y = np.array([1885, 1735, 1572, 1400, 1219, 1047, 708, 295, 62, 69, 66, 58, 60, 63, 62, 53, 68, 42, 73, 59, 76, 64, 69, 60, 66, 62, 55, 52, 67, 64, 63, 66, 84, 77, 67, 45, 62, 43, 76, 68, 52, 61, 61, 62, 64, 60, 64, 63, 48, 70, 67, 51, 53, 58, 51, 69, 44, 68, 60, 53, 59, 65, 75, 51, 57, 43, 53, 74, 66, 56, 60, 54, 70, 46, 65, 69, 63, 59, 54, 76, 55, 75, 56, 64, 45, 48, 51, 55, 72, 61, 65, 46, 62, 43, 67, 52, 58, 63, 54, 71, 67, 60, 72, 55, 70, 64, 71, 56, 64, 59, 68, 54, 58, 60, 59, 58, 55, 58, 59, 49, 54, 64, 60, 65, 66, 56, 62, 50, 67, 62, 58, 59, 67, 63, 45, 69, 68, 54, 66, 64, 79, 59, 57, 74, 65, 61, 66, 39, 62, 54, 55, 62, 62, 59, 62, 60, 54, 51, 65, 66, 63, 44, 38, 78, 60, 64, 56, 59, 53, 63, 68, 65, 63, 61, 58, 64, 70, 69, 58, 83, 64, 58, 71, 60, 54, 66, 70, 68, 67, 59, 65, 69, 61, 55, 51, 65, 53, 64, 53, 49, 62])
print(y)
y2 = 2*np.array([32.72569444, 30.12152778, 27.29166667, 24.30555556, 21.16319444, 18.17708333, 12.29166667, 5.12152778, 1.07638889, 1.19791667, 1.14583333, 1.00694444, 1.04166667, 1.09375, 1.07638889, 0.92013889, 1.18055556, 0.72916667, 1.26736111, 1.02430556, 1.31944444, 1.11111111, 1.19791667, 1.04166667, 1.14583333, 1.07638889, 0.95486111, 0.90277778, 1.16319444, 1.11111111, 1.09375, 1.14583333, 1.45833333, 1.33680556, 1.16319444, 0.78125, 1.07638889, 0.74652778, 1.31944444, 1.18055556, 0.90277778, 1.05902778, 1.05902778, 1.07638889, 1.11111111, 1.04166667, 1.11111111, 1.09375, 0.83333333, 1.21527778, 1.16319444, 0.88541667, 0.92013889, 1.00694444, 0.88541667, 1.19791667, 0.76388889, 1.18055556, 1.04166667, 0.92013889, 1.02430556, 1.12847222, 1.30208333, 0.88541667, 0.98958333, 0.74652778, 0.92013889, 1.28472222, 1.14583333, 0.97222222, 1.04166667, 0.9375, 1.21527778, 0.79861111, 1.12847222, 1.19791667, 1.09375, 1.02430556, 0.9375, 1.31944444, 0.95486111, 1.30208333, 0.97222222, 1.11111111, 0.78125, 0.83333333, 0.88541667, 0.95486111, 1.25, 1.05902778, 1.12847222, 0.79861111, 1.07638889, 0.74652778, 1.16319444, 0.90277778, 1.00694444, 1.09375, 0.9375, 1.23263889, 1.16319444, 1.04166667, 1.25, 0.95486111, 1.21527778, 1.11111111, 1.23263889, 0.97222222, 1.11111111, 1.02430556, 1.18055556, 0.9375, 1.00694444, 1.04166667, 1.02430556, 1.00694444, 0.95486111, 1.00694444, 1.02430556, 0.85069444, 0.9375, 1.11111111, 1.04166667, 1.12847222, 1.14583333, 0.97222222, 1.07638889, 0.86805556, 1.16319444, 1.07638889, 1.00694444, 1.02430556, 1.16319444, 1.09375, 0.78125, 1.19791667, 1.18055556, 0.9375, 1.14583333, 1.11111111, 1.37152778, 1.02430556, 0.98958333, 1.28472222, 1.12847222, 1.05902778, 1.14583333, 0.67708333, 1.07638889, 0.9375, 0.95486111, 1.07638889, 1.07638889, 1.02430556, 1.07638889, 1.04166667, 0.9375, 0.88541667, 1.12847222, 1.14583333, 1.09375, 0.76388889, 0.65972222, 1.35416667, 1.04166667, 1.11111111, 0.97222222, 1.02430556, 0.92013889, 1.09375, 1.18055556, 1.12847222, 1.09375, 1.05902778, 1.00694444, 1.11111111, 1.21527778, 1.19791667, 1.00694444, 1.44097222, 1.11111111, 1.00694444, 1.23263889, 1.04166667, 0.9375, 1.14583333, 1.21527778, 1.18055556, 1.16319444, 1.02430556, 1.12847222, 1.19791667, 1.05902778, 0.95486111, 0.88541667, 1.12847222, 0.92013889, 1.11111111, 0.92013889, 0.85069444, 1.07638889])
print(y2)

fig = plt.figure()
ax = fig.add_subplot(111)

lns1 = ax.plot(x, y, '-', color="blue")
ax2 = ax.twinx()
ax3 = ax.twiny()
lns2 = ax2.plot(x, y2, '-r', color="blue")
lns3 = ax3.plot(x2, y, '-r', color="blue")

# added these three lines +lns2
lns = lns1+lns2+lns3
labs = [l.get_label() for l in lns]

ax.set_xlabel("Frame []")
ax3.set_xlabel("Time [ns]")
ax.set_ylabel("No. of Water Molecules (out of 2880) []")
ax2.set_ylabel("Percentage of Water Molecules [%]")
#ax2.set_ylim(0, 35)
#ax.set_ylim(-20,100)
plt.xlim(0)
ax.set_xlim(0)
ax2.set_xlim(0)
plt.title("Crystallisation of Hexagonal Ice Slab")
plt.grid(linestyle="--", c="#000000")
ax2.grid(linestyle="--", c="#000000")
plt.show()


#y = np.array([1885, 1735, 1572, 1400, 1219, 1047, 708, 295, 62, 69, 66, 58, 60, 63, 62, 53, 68, 42, 73, 59, 76, 64, 69, 60, 66, 62, 55, 52, 67, 64, 63, 66, 84, 77, 67, 45, 62, 43, 76, 68, 52, 61, 61, 62, 64, 60, 64, 63, 48, 70, 67, 51, 53, 58, 51, 69, 44, 68, 60, 53, 59, 65, 75, 51, 57, 43, 53, 74, 66, 56, 60, 54, 70, 46, 65, 69, 63, 59, 54, 76, 55, 75, 56, 64, 45, 48, 51, 55, 72, 61, 65, 46, 62, 43, 67, 52, 58, 63, 54, 71, 67, 60, 72, 55, 70, 64, 71, 56, 64, 59, 68, 54, 58, 60, 59, 58, 55, 58, 59, 49, 54, 64, 60, 65, 66, 56, 62, 50, 67, 62, 58, 59, 67, 63, 45, 69, 68, 54, 66, 64, 79, 59, 57, 74, 65, 61, 66, 39, 62, 54, 55, 62, 62, 59, 62, 60, 54, 51, 65, 66, 63, 44, 38, 78, 60, 64, 56, 59, 53, 63, 68, 65, 63, 61, 58, 64, 70, 69, 58, 83, 64, 58, 71, 60, 54, 66, 70, 68, 67, 59, 65, 69, 61, 55, 51, 65, 53, 64, 53, 49, 62, 1885, 1735, 1572, 1400, 1219, 1047, 708, 295, 62, 69, 66, 58, 60, 63, 62, 53, 68, 42, 73, 59, 76, 64, 69, 60, 66, 62, 55, 52, 67, 64, 63, 66, 84, 77, 67, 45, 62, 43, 76, 68, 52, 61, 61, 62, 64, 60, 64, 63, 48, 70, 67, 51, 53, 58, 51, 69, 44, 68, 60, 53, 59, 65, 75, 51, 57, 43, 53, 74, 66, 56, 60, 54, 70, 46, 65, 69, 63, 59, 54, 76, 55, 75, 56, 64, 45, 48, 51, 55, 72, 61, 65, 46, 62, 43, 67, 52, 58, 63, 54, 71, 67, 60, 72, 55, 70, 64, 71, 56, 64, 59, 68, 54, 58, 60, 59, 58, 55, 58, 59, 49, 54, 64, 60, 65, 66, 56, 62, 50, 67, 62, 58, 59, 67, 63, 45, 69, 68, 54, 66, 64, 79, 59, 57, 74, 65, 61, 66, 39, 62, 54, 55, 62, 62, 59, 62, 60, 54, 51, 65, 66, 63, 44, 38, 78, 60, 64, 56, 59, 53, 63, 68, 65, 63, 61, 58, 64, 70, 69, 58, 83, 64, 58, 71, 60, 54, 66, 70, 68, 67, 59, 65, 69, 61, 55, 51, 65, 53, 64, 53, 49, 62])
#y2 = np.array([(y/5760)*100]) - should be 2880
